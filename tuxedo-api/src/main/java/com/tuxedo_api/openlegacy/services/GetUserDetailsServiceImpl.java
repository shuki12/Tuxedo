package com.tuxedo_api.openlegacy.services;

import javax.inject.Inject;

import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.core.annotations.services.BindFrom;
import org.openlegacy.core.annotations.services.BindInputs;
import org.openlegacy.core.annotations.services.BindOutputs;
import org.openlegacy.core.annotations.services.BindTo;
import org.openlegacy.core.annotations.services.EntityMapping;
import org.openlegacy.core.annotations.services.LogServiceUsage;
import org.openlegacy.core.annotations.services.Service;
import org.openlegacy.core.annotations.services.ServiceMethod;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.openlegacy.utils.ActionUtil;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

import com.tuxedo_sdk.openlegacy.Getuserdetails;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test GetUserDetailsServiceTest.
 *  The interface GetUserDetailsService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "GetUserDetails")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class GetUserDetailsServiceImpl implements GetUserDetailsService {

    @Inject
    private ApplicationContext applicationContext;


    @Inject
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getGetUserDetails", entities = {
            @EntityMapping(alias="getuserdetails", entity=com.tuxedo_sdk.openlegacy.Getuserdetails.class)})
    @LogServiceUsage
    @BindInputs(endpoints = {
            @BindTo(endpoint = "getuserdetails.id3", expression = "id3")})
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "getuserdetails", expression = "getuserdetails")})
    public GetUserDetailsOut getGetUserDetails(GetUserDetailsIn getUserDetailsIn) throws Exception {
        GetUserDetailsOut getUserDetailsOut = new GetUserDetailsOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession tuxedoSdkRpcSession = applicationContext.getBean("tuxedoSdkRpcSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Getuserdetails getuserdetails = serviceBinder.bindInputs(this, "getGetUserDetails", "getuserdetails", new Getuserdetails(), getUserDetailsIn);
            getuserdetails = tuxedoSdkRpcSession.doAction(ActionUtil.getRpcAction(Getuserdetails.class), getuserdetails);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            getUserDetailsOut = serviceBinder.bindOutput(this, "getGetUserDetails", getUserDetailsOut, new String[]{"getUserDetailsIn", "getuserdetails"}, getUserDetailsIn, getuserdetails);
            /* autogenerated - output block end */;

            return getUserDetailsOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            tuxedoSdkRpcSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
